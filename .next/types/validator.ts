// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ..\..\app\admin\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\admin\\page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ..\..\app\cadastro\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\cadastro\\page.js")
  handler satisfies AppPageConfig<"/cadastro">
}

// Validate ..\..\app\calculadora\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\calculadora\\page.js")
  handler satisfies AppPageConfig<"/calculadora">
}

// Validate ..\..\app\cliente\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\cliente\\page.js")
  handler satisfies AppPageConfig<"/cliente">
}

// Validate ..\..\app\contato\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\contato\\page.js")
  handler satisfies AppPageConfig<"/contato">
}

// Validate ..\..\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\app\perguntas-frequentes\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\perguntas-frequentes\\page.js")
  handler satisfies AppPageConfig<"/perguntas-frequentes">
}

// Validate ..\..\app\politica-privacidade\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\politica-privacidade\\page.js")
  handler satisfies AppPageConfig<"/politica-privacidade">
}

// Validate ..\..\app\quem-somos\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\quem-somos\\page.js")
  handler satisfies AppPageConfig<"/quem-somos">
}

// Validate ..\..\app\regulamento\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\regulamento\\page.js")
  handler satisfies AppPageConfig<"/regulamento">
}

// Validate ..\..\app\termos-uso\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\termos-uso\\page.js")
  handler satisfies AppPageConfig<"/termos-uso">
}







// Validate ..\..\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}
